{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				},
				{
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emplid as integer,",
				"          { emplname} as string,",
				"          { emplsal} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"source(output(",
				"          emplid as integer,",
				"          emplname as string,",
				"          emplsal as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source2",
				"source1 derive(sourcehasvalue = sha2(256, columns())) ~> derivedColumn1",
				"source2 derive(targethasvalue = sha2(256, columns())) ~> derivedColumn2",
				"derivedColumn1, derivedColumn2 exists(sourcehasvalue == targethasvalue,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          emplid,",
				"          emplname = { emplname},",
				"          emplsal = { emplsal}",
				"     ),",
				"     format: 'table') ~> sink1"
			]
		}
	}
}